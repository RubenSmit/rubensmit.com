"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _promise = require("babel-runtime/core-js/promise");

var _promise2 = _interopRequireDefault(_promise);

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

var _express = require("express");

var _express2 = _interopRequireDefault(_express);

var _fsExtra = require("fs-extra");

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _logger = require("@phenomic/core/lib/logger");

var _logger2 = _interopRequireDefault(_logger);

var _getPath = require("@phenomic/core/lib/utils/getPath");

var _getPath2 = _interopRequireDefault(_getPath);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var pluginName = "@phenomic/plugin-public-assets";

var log = (0, _logger2.default)(pluginName);

var defaultOptions = {
  path: "public"
};

var publicAssets = function publicAssets(config) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;

  var warnNoPublic = function warnNoPublic() {
    log.warn("No '" + options.path + "' folder found. Please create this folder if you want static files to be served from the root (eg: favicon.ico).");
  };
  return {
    name: pluginName,
    addDevServerMiddlewares: function addDevServerMiddlewares() {
      return (0, _getPath2.default)(_path2.default.join(config.path, options.path)).then(function (publicPath) {
        return [_express2.default.static(publicPath)];
      }, function () {
        warnNoPublic();
        return [];
      });
    },
    beforeBuild: function beforeBuild() {
      return new _promise2.default(function (resolve, reject) {
        (0, _getPath2.default)(_path2.default.join(config.path, options.path)).then(function (publicPath) {
          _fsExtra2.default.copy(publicPath, _path2.default.join(config.path, config.outdir), function (err) {
            if (err) {
              reject(err);
            }
            resolve();
          });
        }, function () {
          warnNoPublic();
          resolve();
        });
      });
    }
  };
};

exports.default = publicAssets;