"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var lookForElement = function lookForElement(id) {
  // id=
  var element = document.getElementById(id);
  if (element) return element;
  // name=
  var elementsSet = document.getElementsByName(id);
  if (elementsSet.length) return elementsSet[0];
};

var retryTimeout = null;
var retryCount = 0;
var retryDelay = 100;
var retryMax = 1000; // 1000 * retryDelay = retry during 10s in case of slow network

// @todo instead of doing a max number of tries, we could imagine trying every
// x previous delay x 2 (; previous delay = delay x 2)

var moveToHash = function moveToHash(id) {
  if (id === "") return;
  var element = lookForElement(id);
  if (!element && retryCount < retryMax) {
    retryTimeout = setTimeout(function () {
      retryCount++;
      moveToHash(id);
    }, retryDelay);
  }
  if (element) element.scrollIntoView();
};

exports.default = function (hash) {
  retryCount = 1;
  if (retryTimeout) {
    clearTimeout(retryTimeout);
  }
  moveToHash(hash.replace(/^#/, ""));
};