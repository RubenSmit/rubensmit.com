"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require("babel-runtime/helpers/extends");

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require("babel-runtime/core-js/object/get-prototype-of");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require("babel-runtime/helpers/createClass");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require("babel-runtime/helpers/inherits");

var _inherits3 = _interopRequireDefault(_inherits2);

exports.default = withInitialProps;

var _react = require("react");

var React = _interopRequireWildcard(_react);

var _hoistNonReactStatics = require("hoist-non-react-statics");

var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

var _utils = require("./utils");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function withInitialProps(ComposedComponent) {
  var displayName = (0, _utils.getDisplayName)(ComposedComponent);

  var PhenomicContainerWithInitialProps = function (_React$Component) {
    (0, _inherits3.default)(PhenomicContainerWithInitialProps, _React$Component);

    function PhenomicContainerWithInitialProps(props) {
      (0, _classCallCheck3.default)(this, PhenomicContainerWithInitialProps);

      // SSR
      var _this = (0, _possibleConstructorReturn3.default)(this, (PhenomicContainerWithInitialProps.__proto__ || (0, _getPrototypeOf2.default)(PhenomicContainerWithInitialProps)).call(this, props));

      _this.state = {
        status: "loading"
      };
      _this._previousInitialPropsArgs = {
        pathname: undefined,
        params: undefined
      };
      if (props.params.__initialPropsForSSR) {
        _this.state = {
          status: "ready",
          props: props.params.__initialPropsForSSR
        };
      }
      if (props.params.__initialErrorForSSR) {
        _this.state = {
          status: "error",
          error: props.params.__initialErrorForSSR
        };
      }
      return _this;
    }

    (0, _createClass3.default)(PhenomicContainerWithInitialProps, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        // CSR
        this.update();
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        // CSR
        this.update();
      }
    }, {
      key: "update",
      value: function update() {
        var _this2 = this;

        var initialPropsArgs = {
          pathname: this.props.location.pathname,
          params: this.props.params
        };
        if (this._previousInitialPropsArgs.pathname !== initialPropsArgs.pathname || this._previousInitialPropsArgs.params !== initialPropsArgs.params) {
          this._previousInitialPropsArgs = initialPropsArgs;
          // $FlowFixMe it's a requirement
          var res = ComposedComponent.getInitialProps(initialPropsArgs);
          if (res.then) {
            res.then(function (props) {
              return _this2.setState({ status: "ready", props: props });
            }, function (error) {
              return _this2.setState({ status: "error", error: error });
            });
          } else {
            // probably an edge case, but just in case people do weird things :)
            // eslint-disable-next-line react/no-did-mount-set-state
            this.setState({ status: "ready", props: res });
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        return React.createElement(ComposedComponent, (0, _extends3.default)({}, this.props, {
          status: this.state.status,
          error: this.state.error
        }, this.state.props));
      }
    }]);
    return PhenomicContainerWithInitialProps;
  }(React.Component);

  // $FlowFixMe I am lazy and "it works on my computer"


  PhenomicContainerWithInitialProps.displayName = "withInitialProps(" + displayName + ")";
  return (0, _hoistNonReactStatics2.default)(PhenomicContainerWithInitialProps, ComposedComponent);
}