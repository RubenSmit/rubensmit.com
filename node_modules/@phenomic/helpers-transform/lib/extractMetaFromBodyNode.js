"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require("babel-runtime/helpers/extends");

var _extends3 = _interopRequireDefault(_extends2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var renderText = function renderText(node) {
  if (!node) return "";
  if (typeof node === "string") return node;
  return Array.isArray(node.c) ? node.c.map(function (child) {
    return renderText(child);
  }).join("") : renderText(node.c);
};

var getHeadings = function getHeadings(node) {
  if (!node) return [];
  if (typeof node.t === "string") {
    var tag = node.t;
    var _level = parseInt(tag[1], 10);
    if (tag[0] === "h" && !isNaN(_level)) {
      return [{
        level: _level,
        text: renderText(node),
        id: node.p && node.p.id ? String(node.p.id) : ""
      }];
    }
  }
  return (Array.isArray(node.c) ? // $FlowFixMe stfu
  node.c.reduce(function (acc, child) {
    return acc.concat(getHeadings(child));
  }, []) : // $FlowFixMe stfu
  getHeadings(node.c)).filter(function (h) {
    return h;
  });
};

exports.default = function (node) {
  var headings = getHeadings(node);
  var firstH1 = headings.find(function (h) {
    return h.level === 1;
  });
  return (0, _extends3.default)({}, firstH1 ? { title: firstH1.text } : {}, headings.length > 0 ? { headings: headings } : {});
};